package com.capgemini.phonesimulatorapplication.dao;

import java.io.FileReader;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;
import java.util.Scanner;

import com.capgemini.phonesimulatorapplication.bean.UserBean;

public class DaoImpl implements DAO {

	FileReader reader;
	Properties prop;
	UserBean user;
	Scanner sc = new Scanner(System.in);


	public DaoImpl() {
		try {
			reader= new FileReader("db.properties");
			prop= new Properties();
			prop.load(reader);
			Class.forName(prop.getProperty("driverClass"));
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	List<UserBean>list= new ArrayList<UserBean>();

	@Override
	public List<UserBean> getAllContacts() {
		try(Connection conn= DriverManager.getConnection(prop.getProperty("dbUrl"), prop.getProperty("dbuser"),
				prop.getProperty("dbpass"));
				Statement stmt= conn.createStatement();
				ResultSet rs= stmt.executeQuery(prop.getProperty("query1"));){
			while(rs.next()) {
				user= new UserBean();
				user.setName(rs.getString(1));
				user.setNumber(rs.getLong(2));
				user.setGroup(rs.getString(3));
				list.add(user);



			}
		}catch(Exception e) {
			e.printStackTrace();
		}

		return list;
	}





	@Override
	public boolean addContact(UserBean user) {
		try(Connection conn= DriverManager.getConnection(prop.getProperty("dbUrl"), prop.getProperty("dbuser"),
				prop.getProperty("dbpass"));
				PreparedStatement pstmt= conn.prepareStatement(prop.getProperty("insert"));){
			pstmt.setString(1, user.getName());
			pstmt.setLong(2, user.getNumber());
			pstmt.setString(3, user.getGroup());
			int count=pstmt.executeUpdate();
			if (count>0)
				return true;
		}catch(Exception e) {
			e.printStackTrace();
		}
		return false;

	}


	@Override
	public boolean deleteContact(String name) {
		try(Connection conn= DriverManager.getConnection(prop.getProperty("dbUrl"), prop.getProperty("dbuser"),
				prop.getProperty("dbpass"));
				PreparedStatement pstmt= conn.prepareStatement(prop.getProperty("delete"));){
			pstmt.setString(1, name);
			int count=pstmt.executeUpdate();
			if(count>0) {
				return true;
			}
		}catch(Exception e) {
			e.printStackTrace();
		}
		return false;

	}



	@Override
	public boolean editPhoneNum(long num) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean editGroup(String group) {
		// TODO Auto-generated method stub
		return false;
	}

}
